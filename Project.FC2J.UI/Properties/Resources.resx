<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_320x240" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUAAAADwBAMAAACDA6BYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAbUExURczMzAAAAH9/f0xMTDMzMxkZGZmZmbKysmZmZnoiH5QAAAAJcEhZcwAADsQAAA7EAZUr
        DhsAAAMhSURBVHja7dbPU9pAFMDxNWDgSCqgR5l2PJtKezatDh6b1rQe1dGhxzIVp0e4tP2zuz/DJvwQ
        MXrofD8HWPA99/Gy2awAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEcI+tn5ezN8fZqd/XDD8z/Lc7xA
        qTlZJ2dTP6P2UT8ayFEjjk766Z7+9jb6eBpNlqT4gcq09XDO5mLVvV8d2Y/azqUQYaqmCKN9IW52lqR4
        gUIHt8SDOZsb6terY3mt9UUbd+XL6JsaJkva4QUq2+e6wNU5T1XfzWdXPYgv9cy7q1IC16z4Rhe4Ts7m
        mt182JGLrG1K2FuZ0xE2qq4KXC9nY16Bifz0ygzbK3MS8zY61gWul7Oxesuf113wxG4lv81bsF/ISVyQ
        Ti7nVOzqMB9mciF9MsOpXlaikZr33nEhJ9OvsnO6wFJOxcIs/91qLY1sJT3bMnPDBu1Cc+yikz9NF1jO
        qVQYD/JxINfSld0r3LtpYW9QSArMosvs+ijnVFjdUT/9MPu43ZpNMnIXXrWw1EAdKDftbqnA0WHVBTaj
        qPN29nE6WTCZamGpgTpQtnXy7AXK6a+Tz/m4s3CycbfcQB1oFuKzFyjnSdzSrncXTtZIp6UG6kBRV8+3
        Fyhw9oSK9xdPNu6U9jcdaDaVlyjQPaFqe/4k3h3Zi4r7mwkM9avZZuZzKmWfUFM9zdbcnha0b7uFeBM4
        1oG6wK3n3AeFK7BpTijb9sEX55e1N3CPE+EHTjMl7WQXC3KqZQo0fdGbm5K5v6pbeOy30Aa+OVFO2ydn
        8znVauiO1OwRzywtEebHY7UH+i2sFQ7O+hLP5VTLHJZidwem+jq5ptiHiNfCuHCrmqNQKadiI3UWucsP
        mz1dQH56MQ+RWQvviqdSU2AppzL6GRKquRtpfgPqSxi4ra9hHyJje6LyAr0CiznVSb4c3H9P1BUet/9q
        aorkYnidfHUxQ1uYndwPnBVYyqlM+C6Kogs11ygy1IUMEvnlshQ/0CtwZc5T3B8M579sXA8f/Y82yQEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPj/CfEPFxeIruv2vGoAAAAASUVORK5CYII=
</value>
  </data>
</root>